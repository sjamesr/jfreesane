plugins {
    id 'checkstyle'
    id 'java'
    id 'wrapper'
    id 'com.jfrog.bintray' version '1.4'
    id 'maven-publish'
    id 'com.github.sherter.google-java-format' version '0.3.2'
}

def releaseVersion = '0.96'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.8.2'
    testCompile 'com.google.truth:truth:0.24'
}

wrapper {
    gradleVersion = '2.8'
}

checkstyle {
    configFile = file('checkstyle_config.xml')
    ignoreFailures = false
    toolVersion = '6.19'
}

task checkstyleHtml << {
    ant.xslt(in: checkstyleMain.reports.xml.destination,
             style: file('checkstyle-noframes-sorted.xsl'),
             out: new File(checkstyleMain.reports.xml.destination.parent, 'main.html'))
}

checkstyleMain.finalizedBy checkstyleHtml

// Don't stop test from running because of checkstyle failures.
checkstyleTest.mustRunAfter test

task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName 'javadoc'

    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    baseName 'sources'

    from sourceSets.main.allJava
}

def appendMavenCentralMetadata(Node node) {
    node.appendNode('name', 'JFreeSane')
    node.appendNode('description', 'A Java client for the SANE daemon')
    node.appendNode('url', 'http://github.com/sjamesr/jfreesane')

    def license = node.appendNode('licenses').appendNode('license')
    license.appendNode('name', 'The Apache Software License, Version 2.0')
    license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
    license.appendNode('distribution', 'repo')

    node.appendNode('scm').appendNode('url', 'https://github.com/sjamesr/jfreesane.git')

    def developerInfo = node.appendNode('developers').appendNode('developer')
    developerInfo.appendNode('id', 'dev')
    developerInfo.appendNode('name', 'The JFreeSane Contributors')
    developerInfo.appendNode('email', 'jfreesane-discuss@googlegroups.com')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            artifact javadocJar {
                classifier 'javadoc'
            }

            groupId 'com.googlecode.jfreesane'
            artifactId 'jfreesane'
            version releaseVersion

            pom.withXml {
                appendMavenCentralMetadata(asNode())
            }
        }
    }
}

bintray {
    user = project.properties.bintrayUsername
    key = project.properties.bintrayApiKey

    pkg {
        repo = 'maven'
        name = 'jfreesane'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/sjamesr/jfreesane.git'

        version {
            name = releaseVersion
            vcsTag = "jfreesane-${releaseVersion}"

            gpg {
                sign = true
            }
        }

    }

    publications = ['mavenJava']
}

// If Java formatter checks fail, tell the user how to fix them.
task printFormatHelperMessage << {
    throw new GradleException('google-java-format is required.\n' +
        'Use ./gradlew googleJavaFormat to reformat the broken files')
}
verifyGoogleJavaFormat.finalizedBy printFormatHelperMessage
printFormatHelperMessage.onlyIf { verifyGoogleJavaFormat.state.failure != null }
